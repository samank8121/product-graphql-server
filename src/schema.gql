# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthInfo {
  token: String!
  user: AuthUserInfo!
}

type AuthUserInfo {
  email: String!
  username: String!
}

type Cart {
  createdAt: DateTime!
  id: Int!
  products: [ProductWithCount!]!
  updatedAt: DateTime!
  user: User!
}

input CreateProductInput {
  caption: String!
  description: String!
  imageSrc: String!
  price: Float!
  rate: Int = 0
  slug: String!
  weight: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FindCartInput {
  id: Int
  userId: Int
}

input FindProductInput {
  caption: String
  description: String
  id: Int
  imageSrc: String
  price: Float
  rate: Int
  slug: String
  weight: String
}

input FindUserInput {
  email: String
  id: Int
  username: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  CreateProduct(params: CreateProductInput!): Product!
  CreateUser(params: CreateUserInput!): User!
  DeleteCart(id: Int!): Boolean!
  DeleteProduct(slug: String!): Boolean!
  DeleteUser(id: Int!): Boolean!
  Login(params: LoginInput!): AuthInfo!
  Signup(params: CreateUserInput!): AuthInfo!
  UpdateCart(params: UpdateCartInput!): Cart!
  UpdateProduct(params: UpdateProductInput!): Product!
  UpdateUser(params: UpdateUserInput!): User!
}

type Product {
  caption: String!
  cartIds: [Cart!]
  createdAt: DateTime!
  description: String!
  id: Int!
  imageSrc: String!
  price: Float!
  rate: Int!
  slug: String!
  updatedAt: DateTime!
  weight: String!
}

input ProductIdCountInput {
  count: Int!
  productId: Int!
}

type ProductWithCount {
  caption: String!
  cartIds: [Cart!]
  count: Int!
  createdAt: DateTime!
  description: String!
  id: Int!
  imageSrc: String!
  price: Float!
  rate: Int!
  slug: String!
  updatedAt: DateTime!
  weight: String!
}

type Query {
  carts(params: FindCartInput): [Cart!]!
  product(slug: String!): Product!
  products(params: FindProductInput): [Product!]!
  users(params: FindUserInput): [User!]!
}

input UpdateCartInput {
  id: Int!
  products: [ProductIdCountInput!]
}

input UpdateProductInput {
  caption: String
  description: String
  imageSrc: String
  price: Float
  rate: Int = 0
  slug: String!
  weight: String
}

input UpdateUserInput {
  id: Int!
  password: String
  username: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: Int!
  password: String!
  updatedAt: DateTime!
  username: String!
}